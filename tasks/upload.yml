---
- name: Ensure base path exists
  ansible.builtin.file:
    path: "{{ somoffice_remote_base_path }}"
    state: directory
    mode: 0755
  tags:
    - sombackoffice
    - deploy

- name: Ensure rsync is available
  ansible.builtin.apt:
    name: rsync
    state: present
    update_cache: true
  tags:
    - sombackoffice
    - deploy

- name: Create deploy folder in server
  ansible.builtin.file:
    path: "{{ somoffice_remote_base_path }}"
    state: directory
    mode: 0755
  tags:
    - sombackoffice
    - deploy

- name: Ensure deploy folder exists
  ansible.builtin.file:
    path: "{{ somoffice_role_deploy_path }}"
    state: directory
    mode: 0755
  tags:
    - sombackoffice
    - deploy

- name: Upload the build folder to new created folder in server.
  ansible.posix.synchronize:
    src: "{{ somoffice_role_local_path }}/src/"
    dest: "{{ somoffice_role_deploy_path }}"
    recursive: true
    delete: true
  tags:
    - sombackoffice
    - deploy

- name: Check if already there is a deployment
  ansible.builtin.stat:
    path: "{{ somoffice_remote_base_path }}/current"
  register: somoffice_remote_base_path_current
  tags:
    - sombackoffice
    - deploy

- name: Backup old simbolic link in case of exist
  ansible.builtin.command: mv "{{ somoffice_remote_base_path }}/current"
    "{{ somoffice_remote_base_path }}/current-{{ date }}.bak"
  when: somoffice_remote_base_path_current.stat.exists
  tags:
    - sombackoffice
    - deploy

- name: Create simbolic link
  ansible.builtin.file:
    src: "{{ somoffice_role_deploy_path }}"
    dest: "{{ somoffice_remote_base_path }}/current"
    state: link
  notify: "Remove temporal folder"
  tags:
    - sombackoffice
    - deploy
